[2023-07-04 17:25:12,652] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-04 17:25:12,684] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-07-04 17:25:12,688] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-07-04 17:25:12,732] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-07-04 17:25:12,736] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-04 17:25:12,741] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-04 17:25:12,743] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-07-04 17:25:12,757] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-07-04 17:25:12,761] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-07-04 17:25:12,766] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-07-04 17:25:12,773] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-04 17:25:12,775] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-07-04 17:25:12,775] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-04 17:25:12,775] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-04 17:25:12,776] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-04 17:25:12,779] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-04 17:25:12,783] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-04 17:25:12,784] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-04 17:25:12,785] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-07-04 17:25:12,787] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-04 17:25:12,806] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 17:25:12,807] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 17:25:12,815] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 17:25:12,816] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 17:25:12,816] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 17:25:12,816] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 17:25:12,820] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 17:25:12,820] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-07-04 17:25:12,826] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 17:25:12,827] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 17:25:12,827] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-04 17:25:12,831] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-04 17:25:12,832] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-04 17:25:12,842] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-04 17:25:13,327] INFO [RequestSendThread controllerId=0] Controller 0 connected to aria:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-04 17:25:17,844] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 17:25:17,845] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 17:26:27,328] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-07-04 17:26:27,328] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-07-04 17:26:27,328] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-07-04 17:26:27,331] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2023-07-04 17:26:27,411] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-04 17:26:27,414] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-04 17:26:27,414] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-04 17:26:27,414] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-07-04 17:26:27,414] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-07-04 17:26:27,416] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 17:26:27,416] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 17:26:27,417] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-07-04 17:26:27,417] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-04 17:26:27,417] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-07-04 17:26:27,419] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-07-04 17:27:40,983] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-04 17:27:41,007] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-07-04 17:27:41,011] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-07-04 17:27:41,050] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-07-04 17:27:41,055] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-04 17:27:41,059] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-04 17:27:41,061] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-07-04 17:27:41,078] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-07-04 17:27:41,083] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-07-04 17:27:41,088] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-07-04 17:27:41,093] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-04 17:27:41,095] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-07-04 17:27:41,095] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-04 17:27:41,096] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-04 17:27:41,096] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-04 17:27:41,098] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-04 17:27:41,098] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-04 17:27:41,098] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-04 17:27:41,099] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-07-04 17:27:41,100] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-04 17:27:41,115] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 17:27:41,119] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 17:27:41,130] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 17:27:41,130] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 17:27:41,131] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 17:27:41,131] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 17:27:41,135] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 17:27:41,135] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-07-04 17:27:41,144] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 17:27:41,145] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 17:27:41,145] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-04 17:27:41,145] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-04 17:27:41,146] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-04 17:27:41,156] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-04 17:27:41,619] INFO [RequestSendThread controllerId=0] Controller 0 connected to aria:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-04 17:27:46,156] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 17:27:46,156] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 17:32:46,162] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 17:32:46,162] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 17:37:46,167] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 17:37:46,167] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 17:38:28,716] INFO [Controller id=0] New topics: [Set(topico-test)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topico-test,Some(o_faTMDUTOSfgUv86JU5CA),Map(topico-test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-04 17:38:28,717] INFO [Controller id=0] New partition creation callback for topico-test-0 (kafka.controller.KafkaController)
[2023-07-04 17:38:28,762] INFO [RequestSendThread controllerId=0] Controller 0 connected to aria:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-04 17:42:46,181] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 17:42:46,181] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 17:42:46,182] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-04 17:42:46,183] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-04 17:47:46,194] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 17:47:46,194] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 17:47:46,194] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-04 17:47:46,194] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-04 17:52:46,209] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 17:52:46,209] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 17:52:46,209] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-07-04 17:52:46,209] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-04 17:56:48,532] DEBUG [Controller id=0] Delete topics listener fired for topics topico-test to be deleted (kafka.controller.KafkaController)
[2023-07-04 17:56:48,532] INFO [Controller id=0] Starting topic deletion for topics topico-test (kafka.controller.KafkaController)
[2023-07-04 17:56:48,534] INFO [Topic Deletion Manager 0] Handling deletion for topics topico-test (kafka.controller.TopicDeletionManager)
[2023-07-04 17:56:48,535] INFO [Topic Deletion Manager 0] Deletion of topic topico-test (re)started (kafka.controller.TopicDeletionManager)
[2023-07-04 17:56:48,540] INFO [RequestSendThread controllerId=0] Controller 0 connected to aria:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-04 17:56:48,591] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(topico-test-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-07-04 17:56:48,592] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=topico-test,Partition=0,Replica=0]. Halting deletion for topics Set(topico-test) (kafka.controller.TopicDeletionManager)
[2023-07-04 17:56:48,593] INFO [Topic Deletion Manager 0] Halted deletion of topics topico-test due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-07-04 17:56:48,593] INFO [Topic Deletion Manager 0] Handling deletion for topics topico-test (kafka.controller.TopicDeletionManager)
[2023-07-04 17:56:48,594] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics topico-test since replicas [Topic=topico-test,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-07-04 18:18:51,722] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-04 18:18:51,755] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2023-07-04 18:18:51,757] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-07-04 18:18:51,761] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-04 18:18:51,764] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-04 18:18:51,767] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-07-04 18:18:51,792] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 55) (kafka.controller.KafkaController)
[2023-07-04 18:18:51,817] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-07-04 18:18:51,849] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-07-04 18:18:51,869] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-04 18:18:51,873] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-07-04 18:18:51,874] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-04 18:18:51,875] INFO [Controller id=0] Current list of topics in the cluster: HashSet(topico-test) (kafka.controller.KafkaController)
[2023-07-04 18:18:51,875] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-04 18:18:51,883] INFO [Controller id=0] List of topics to be deleted: topico-test (kafka.controller.KafkaController)
[2023-07-04 18:18:51,883] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-04 18:18:51,884] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-04 18:18:51,884] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(topico-test), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-07-04 18:18:51,894] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-04 18:18:51,907] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:18:51,915] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:18:51,942] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:18:51,942] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=topico-test,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:18:51,943] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:18:51,946] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:18:51,948] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(topico-test-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:18:51,948] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2023-07-04 18:18:51,952] INFO [Topic Deletion Manager 0] Handling deletion for topics topico-test (kafka.controller.TopicDeletionManager)
[2023-07-04 18:18:51,953] INFO [Topic Deletion Manager 0] Deletion of topic topico-test (re)started (kafka.controller.TopicDeletionManager)
[2023-07-04 18:18:51,993] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 18:18:51,994] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 18:18:51,994] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-04 18:18:51,994] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-04 18:18:51,995] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-04 18:18:52,005] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-04 18:18:52,416] INFO [RequestSendThread controllerId=0] Controller 0 connected to aria:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-04 18:18:52,501] INFO [Controller id=0] New topics: [Set(test)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test,Some(0UmNHHoSRaGWmckb39wA6g),Map(test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-04 18:18:52,501] INFO [Controller id=0] New partition creation callback for test-0 (kafka.controller.KafkaController)
[2023-07-04 18:18:52,525] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(topico-test-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-07-04 18:18:52,526] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=topico-test,Partition=0,Replica=0]. Halting deletion for topics Set(topico-test) (kafka.controller.TopicDeletionManager)
[2023-07-04 18:18:52,528] INFO [Topic Deletion Manager 0] Halted deletion of topics topico-test due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-07-04 18:18:52,528] INFO [Topic Deletion Manager 0] Handling deletion for topics topico-test (kafka.controller.TopicDeletionManager)
[2023-07-04 18:18:52,530] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics topico-test since replicas [Topic=topico-test,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-07-04 18:19:55,800] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-04 18:19:55,828] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2023-07-04 18:19:55,830] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-07-04 18:19:55,834] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-04 18:19:55,838] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-04 18:19:55,840] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-07-04 18:19:55,881] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 82) (kafka.controller.KafkaController)
[2023-07-04 18:19:55,897] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-07-04 18:19:55,915] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-07-04 18:19:55,927] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-04 18:19:55,930] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-07-04 18:19:55,930] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-04 18:19:55,930] INFO [Controller id=0] Current list of topics in the cluster: HashSet(test, topico-test) (kafka.controller.KafkaController)
[2023-07-04 18:19:55,931] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-04 18:19:55,937] INFO [Controller id=0] List of topics to be deleted: topico-test (kafka.controller.KafkaController)
[2023-07-04 18:19:55,937] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-04 18:19:55,937] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-04 18:19:55,938] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(topico-test), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-07-04 18:19:55,941] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-04 18:19:55,957] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:19:55,972] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:19:56,006] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:19:56,007] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=topico-test,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:19:56,007] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:19:56,013] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:19:56,015] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(test-0 -> OnlinePartition, topico-test-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:19:56,016] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2023-07-04 18:19:56,018] INFO [Topic Deletion Manager 0] Handling deletion for topics topico-test (kafka.controller.TopicDeletionManager)
[2023-07-04 18:19:56,020] INFO [Topic Deletion Manager 0] Deletion of topic topico-test (re)started (kafka.controller.TopicDeletionManager)
[2023-07-04 18:19:56,053] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 18:19:56,053] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 18:19:56,054] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-04 18:19:56,054] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-04 18:19:56,055] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-04 18:19:56,062] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-04 18:19:56,476] INFO [RequestSendThread controllerId=0] Controller 0 connected to aria:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-04 18:19:56,618] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(topico-test-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-07-04 18:19:56,619] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=topico-test,Partition=0,Replica=0]. Halting deletion for topics Set(topico-test) (kafka.controller.TopicDeletionManager)
[2023-07-04 18:19:56,621] INFO [Topic Deletion Manager 0] Halted deletion of topics topico-test due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-07-04 18:19:56,621] INFO [Topic Deletion Manager 0] Handling deletion for topics topico-test (kafka.controller.TopicDeletionManager)
[2023-07-04 18:19:56,621] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics topico-test since replicas [Topic=topico-test,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-07-04 18:53:42,477] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-04 18:53:42,521] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2023-07-04 18:53:42,523] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-07-04 18:53:42,528] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-04 18:53:42,531] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-04 18:53:42,533] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-07-04 18:53:42,551] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 120) (kafka.controller.KafkaController)
[2023-07-04 18:53:42,567] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-07-04 18:53:42,583] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-07-04 18:53:42,593] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-04 18:53:42,594] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-07-04 18:53:42,594] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-04 18:53:42,595] INFO [Controller id=0] Current list of topics in the cluster: HashSet(test, topico-test) (kafka.controller.KafkaController)
[2023-07-04 18:53:42,595] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-04 18:53:42,599] INFO [Controller id=0] List of topics to be deleted: topico-test (kafka.controller.KafkaController)
[2023-07-04 18:53:42,599] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-04 18:53:42,600] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-04 18:53:42,600] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(topico-test), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-07-04 18:53:42,602] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-04 18:53:42,613] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:53:42,624] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:53:42,653] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:53:42,654] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=topico-test,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:53:42,655] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:53:42,662] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:53:42,665] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(test-0 -> OnlinePartition, topico-test-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:53:42,666] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2023-07-04 18:53:42,668] INFO [Topic Deletion Manager 0] Handling deletion for topics topico-test (kafka.controller.TopicDeletionManager)
[2023-07-04 18:53:42,670] INFO [Topic Deletion Manager 0] Deletion of topic topico-test (re)started (kafka.controller.TopicDeletionManager)
[2023-07-04 18:53:42,713] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 18:53:42,714] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 18:53:42,714] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-04 18:53:42,714] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-04 18:53:42,715] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-04 18:53:42,723] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-04 18:53:43,119] INFO [RequestSendThread controllerId=0] Controller 0 connected to aria:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-04 18:53:43,283] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(topico-test-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-07-04 18:53:43,284] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=topico-test,Partition=0,Replica=0]. Halting deletion for topics Set(topico-test) (kafka.controller.TopicDeletionManager)
[2023-07-04 18:53:43,285] INFO [Topic Deletion Manager 0] Halted deletion of topics topico-test due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-07-04 18:53:43,285] INFO [Topic Deletion Manager 0] Handling deletion for topics topico-test (kafka.controller.TopicDeletionManager)
[2023-07-04 18:53:43,286] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics topico-test since replicas [Topic=topico-test,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-07-04 18:55:41,290] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-04 18:55:41,315] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2023-07-04 18:55:41,316] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-07-04 18:55:41,320] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-04 18:55:41,322] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-04 18:55:41,325] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-07-04 18:55:41,350] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 46) (kafka.controller.KafkaController)
[2023-07-04 18:55:41,361] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-07-04 18:55:41,368] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-07-04 18:55:41,378] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-07-04 18:55:41,380] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-07-04 18:55:41,381] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-04 18:55:41,381] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-04 18:55:41,382] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-04 18:55:41,384] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-04 18:55:41,385] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-04 18:55:41,385] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-04 18:55:41,386] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-07-04 18:55:41,403] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-04 18:55:41,411] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:55:41,411] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:55:41,415] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:55:41,415] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-07-04 18:55:41,416] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:55:41,416] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:55:41,419] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-07-04 18:55:41,419] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2023-07-04 18:55:41,424] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 18:55:41,424] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-04 18:55:41,424] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-04 18:55:41,424] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-04 18:55:41,425] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-04 18:55:41,439] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-04 18:55:41,928] INFO [RequestSendThread controllerId=0] Controller 0 connected to aria:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-04 18:55:46,448] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 18:55:46,448] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 18:55:56,341] INFO [Controller id=0] New topics: [Set(topic-test)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic-test,Some(WuPXnNxaRnKtPEQzYGMaZA),Map(topic-test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-04 18:55:56,342] INFO [Controller id=0] New partition creation callback for topic-test-0 (kafka.controller.KafkaController)
[2023-07-04 18:56:06,709] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-07-04 18:56:06,712] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-07-04 18:56:19,816] INFO [Controller id=0] New topics: [Set(producer-test)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(producer-test,Some(BlHhNUviQ42Y2b1Yw9ayig),Map(producer-test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-04 18:56:19,816] INFO [Controller id=0] New partition creation callback for producer-test-0 (kafka.controller.KafkaController)
[2023-07-04 18:57:41,120] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(m7K-iv9cQQmWdv2XIlixAw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-04 18:57:41,120] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-07-04 19:00:46,462] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 19:00:46,466] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 19:00:46,469] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-07-04 19:00:46,470] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-07-04 19:05:46,472] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-04 19:05:46,472] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-04 19:05:46,472] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-07-04 19:05:46,472] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
